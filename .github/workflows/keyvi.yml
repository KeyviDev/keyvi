# Build on Linux

name: Build keyvi

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{matrix.os}}
    name:  ${{ matrix.type }} on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        type: ['Release', 'Debug']
        os: ['macos-latest', 'ubuntu-20.04']
    steps:
      - name: install Linux deps
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libsnappy-dev libzzip-dev zlib1g-dev libboost-all-dev
          sudo apt-get install ccache
      - name: install macOS deps
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install zlib snappy boost
          brew install ccache
      - name: checkout from git
        uses: actions/checkout@v2
      
      # Ccache https://cristianadam.eu/20200113/speeding-up-c-plus-plus-github-actions-using-ccache/
    
      - name: Prepare ccache timestamp
        id: ccache_cache_timestamp
        shell: cmake -P {0}
        run: |
          string(TIMESTAMP current_date "%Y-%m-%d-%H;%M;%S" UTC)
          message("::set-output name=timestamp::${current_date}")
      - name: ccache cache files
        uses: actions/cache@v2
        with:
          path: .ccache
          key: ${{ matrix.os }}-${{ matrix.type }}-ccache-${{ steps.ccache_cache_timestamp.outputs.timestamp }}
          restore-keys: |
            ${{ matrix.os }}-${{ matrix.type }}-ccache-
      - name: Configure ccache
        id: ccache_configure
        run: |
          ccache --set-config=cache_dir=$GITHUB_WORKSPACE/.ccache
          ccache --set-config=max_size=500M
          ccache --set-config=compression=true
          ccache -p
          ccache -z

      - name: build with cmake
        uses: lukka/run-cmake@v3
        with:
          cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
          cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
          cmakeBuildType: ${{matrix.type}}
          cmakeAppendedArgs: '-D CMAKE_C_COMPILER_LAUNCHER=ccache -D CMAKE_CXX_COMPILER_LAUNCHER=ccache'
          buildWithCMake: true
          buildDirectory: '${{ github.workspace }}/build'

      - name: Unit tests
        id: unit_tests
        run: |
         build/unit_test_all
          
      - name: Stats from ccache
        id: ccache_stats
        run: |
         ccache -s
