# Build on Linux

name: Build keyvi core

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    paths-ignore:
      - '.github/workflows/docs.yml'
      - '.github/workflows/python**.yml'
      - '.github/workflows/rust**.yml'
      - 'docker/**'
      - 'doc/**'
      - 'python/**'
      - 'rust/**'

  pull_request:
    branches: [ master ]
    paths-ignore:
      - '.github/workflows/docs.yml'
      - '.github/workflows/python**.yml'
      - '.github/workflows/rust**.yml'
      - 'docker/**'
      - 'doc/**'
      - 'python/**'
      - 'rust/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{matrix.os}}
    name:  ${{ matrix.type }} on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        type: ['Release', 'Debug']
        os: ['macos-latest', 'ubuntu-24.04']
    steps:
      - name: install Linux deps
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libsnappy-dev libzzip-dev zlib1g-dev libboost-all-dev clang-tidy
      - name: install macOS deps
        if: runner.os == 'macOS'
        run: |
          brew update
          # workaround for https://github.com/actions/setup-python/issues/577
          brew list -1 | grep python | while read formula; do brew unlink $formula; brew link --overwrite $formula; done
          brew install zlib snappy boost
      - name: checkout from git
        uses: actions/checkout@v5

      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2.19
        with:
          key: ${{ matrix.os }}-${{ matrix.type }}

      - name: build with cmake
        uses: lukka/run-cmake@v3
        with:
          cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
          cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
          cmakeAppendedArgs: '-DCMAKE_BUILD_TYPE=${{ matrix.type }} -D CMAKE_C_COMPILER_LAUNCHER=ccache -D CMAKE_CXX_COMPILER_LAUNCHER=ccache'
          buildWithCMake: true
          buildDirectory: '${{ github.workspace }}/build'

      - name: Unit tests
        id: unit_tests
        run: |
         build/unit_test_all -l unit_scope
